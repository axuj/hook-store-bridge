# 工作流的名称
name: Publish to npm with pnpm

# 触发工作流的条件
on:
  push:
    tags:
      - v*

# 权限
permissions:
  id-token: write
  contents: write

# 工作流执行的任务
jobs:
  build-and-publish:
    # 任务运行的虚拟机环境
    runs-on: ubuntu-latest

    # 启用手动发布审批，需在 GitHub "Settings > Environments" 中配置。
    # 此名称 ('npm-publish') 必须与 npm Provenance 设置中的环境名完全一致。
    environment: npm-publish

    
    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 安装 pnpm
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          # 指定你项目使用的 pnpm 版本
          version: 10.15.1

      # 设置 Node.js 环境 (在 pnpm 之后)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.0'
          # 关键：为 pnpm 设置缓存
          cache: 'pnpm'

      # 安装依赖
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 校验版本号是否一致 (这一步无需任何改动)
      - name: Check version match
        run: |
          TAG_VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
          echo "Git Tag Version: $TAG_VERSION"
          
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Package.json Version: $PKG_VERSION"
          
          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "Error: Git tag version ($TAG_VERSION) does not match package.json version ($PKG_VERSION)."
            exit 1
          fi

      # 构建项目
      - name: Build project
        run: pnpm build


      # 发布到 npm
      - name: Publish to npm
        run: pnpm publish --no-git-checks

      # 生成 changelog
      - run: pnpm dlx changelogithub --no-group
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
